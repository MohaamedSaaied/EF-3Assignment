// <auto-generated />
using EF_3InhertanceExample.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_3InhertanceExample.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20240828100434_TPC")]
    partial class TPC
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_3InhertanceExample.Models.Employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Employees", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("EF_3InhertanceExample.Models.FullTimeEmp", b =>
                {
                    b.HasBaseType("EF_3InhertanceExample.Models.Employee");

                    b.Property<double>("salary")
                        .HasColumnType("float");

                    b.ToTable("FullTimeEmps", (string)null);
                });

            modelBuilder.Entity("EF_3InhertanceExample.Models.PartTimeEmp", b =>
                {
                    b.HasBaseType("EF_3InhertanceExample.Models.Employee");

                    b.Property<double>("HoureRate")
                        .HasColumnType("float");

                    b.Property<int>("NumOfHour")
                        .HasColumnType("int");

                    b.ToTable("PartTimeEmps", (string)null);
                });

            modelBuilder.Entity("EF_3InhertanceExample.Models.FullTimeEmp", b =>
                {
                    b.HasOne("EF_3InhertanceExample.Models.Employee", null)
                        .WithOne()
                        .HasForeignKey("EF_3InhertanceExample.Models.FullTimeEmp", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EF_3InhertanceExample.Models.PartTimeEmp", b =>
                {
                    b.HasOne("EF_3InhertanceExample.Models.Employee", null)
                        .WithOne()
                        .HasForeignKey("EF_3InhertanceExample.Models.PartTimeEmp", "id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
